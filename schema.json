{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/MrPeacockNLB/schema/main/schema.json",
    "title": "Coder.yaml",
    "description": "Description of coder.yaml for template nlb01",
    "type": "object",
    "properties": {
        "coder": {
            "type": "object",
            "properties": {
               "workspace": {
                     "type": "object",
                    "description": "Settings for workspace",
                    "properties": {
                        "shell": {
                            "description": "Shell settings for the terminal",
                            "type": "object",
                            "properties": {
                                "login": {
                                    "enum": ["bash", "zsh", "fish"],
                                    "description": "Default login shell. Sets SHELL env var. Defaults to bash"
                                },
                                "editor": {
                                    "type": "string",
                                    "description": "Default editor in shell. Sets EDITOR and VISUAL env vars"
                                },
                                "enable_tmux": {
                                    "type": "boolean",
                                    "description": "if set to true tmux gets started. Defaults to false"
                                }
                            }
                        },
                        "env": {
                            "description": "Array of Environment vars",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "description": "Must contain name as Environment var name and value as value for this var",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the Environment var"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "actual value of the Environment var"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "name",
                                    "value"
                                ]
                            }
                        },
                        "requests": {
                            "description": "Kubernetes requests on CPU and Memory",
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "How much cpu does this workspace need to be deployed"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "How much memory does this workspace need to be deployed",
                                    "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                                }
                            },
                            "additionalProperties": false
                        },
                        "limits": {
                            "description": "Kubernetes limits on CPU and Memory",
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "This defines the maximum cpu to be allocated by this workspace"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "This defines the maximum memory to be allocated by this workspace",
                                    "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                                }
                            },
                            "additionalProperties": false
                        },
                        "dind": {
                            "description": "Kubernetes limits on CPU and Memory for DinD container. This is only affects if docker is enable",
                            "type": "object",
                            "properties": {
                                "enable": {
                                    "description": "if true then docker deamon is avaiable in workspace. Defaults to false",
                                    "type": "boolean"
                                },
                                "limits": {
                                    "description": "Kubernetes limits on CPU and Memory for DinD container",
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "type": "string",
                                            "description": "This defines the maximum cpu to be allocated for DinD container"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "description": "This defines the maximum memory to be allocated for DinD container",
                                            "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "additionalProperties": false
                            }
                        },
                        "image": {
                                "type": "string",
                                "description": "This is the container image used in kubernetes pod for your workspace"
                        },
                        "startup_script_timeout": {
                            "type": "integer",
                            "description": "Timeout in seconds for the agent startup-script. This depends on the steps to be executed inside jobs in coder.yaml. It defaults to 3600 seconds"
                        },
                        "git": {
                            "description": "Kubernetes requests on CPU and Memory",
                            "type": "object",
                            "properties": {
                                "enable_pre-commit": {
                                    "type": "boolean",
                                    "description": "If this is true then pre-commit get automatically enabled on cloned repositories"
                                },
                                "merge_strategy": {
                                    "type": "string",
                                    "description": "rebase or merge",
                                    "enum": [
                                        "rebase",
                                        "merge"
                                    ]
                                },
                                "additional_repos": {
                                    "description": "Array of additional repository be be cloned into the workspace",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "Must contain name as Environment var name and value as value for this var",
                                        "properties": {
                                            "description": {
                                                "type": "string",
                                                "description": "Description of usage for this repository. Optional"
                                            },
                                            "git_orga": {
                                                "type": "string",
                                                "description": "This is the GitHub organisation of the repo to be cloned"
                                            },
                                            "git_repo": {
                                                "type": "string",
                                                "description": "This is the repository name of the repo to be cloned"
                                            },
                                            "git_ref": {
                                                "type": "string",
                                                "description": "This is the branch to be checked out. Defaults to main"
                                            },
                                            "path": {
                                                "type": "string",
                                                "description": "Target directory. Defaults to /workspace/${git_repo}"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "git_orga",
                                            "git_repo",
                                            "git_ref"
                                        ]
                                    }
                                }
                            },
                            "additionalProperties": false
                        },
                        "nix": {
                            "description": "This configures Niy package manager",
                            "type": "object",
                            "properties": {
                                "enable": {
                                    "description": "if true then Nix deamon is avaiable in workspace. Defaults to false",
                                    "type": "boolean"
                                },
                                "size": {
                                    "description": "If size > 0 then a storage is mounted on /nix",
                                    "type": "integer"
                                }
                            },
                            "additionalProperties": false
                        },
                        "additionalProperties": false
                    },
                    "additionalProperties": false 
                },
                "jetbrains": {
                    "type": "object",
                    "description": "Settings for workspace",
                    "properties": {
                        "intellij": {
                            "type": "object",
                            "description": "Settings for IntelliJ",
                            "properties": {
                                "enable": {
                                    "type": "boolean",
                                    "description": "True enables the installation of IntelliJ button. Defaults to true"
                                },
                                "idePath": {
                                    "description": "This is the installation path of IntelliJ inside your workspace",
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        },
                        "plugins": {
                            "type": "array",
                            "description": "Plugins for JetBrains IDEs",
                            "items": {
                                "type": "object",
                                "description": "",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The name of the plugin"
                                    },
                                    "id": {
                                        "description": "The ID of the plugin",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "e.g. reason why it's needed"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "name",
                                    "id"
                                ]
                            }
                        }
                    }
                },        
                "vscode": {
                    "type": "object",
                    "description": "Settings for code-server a.k.a. VSCode online. All settings are applied after jobs has been executed. If you want to download a .vsix extension then you can do it as a job.",
                    "properties": {
                        "enable": {
                            "type": "boolean",
                            "description": "True enables the installation of VSCoder server. Defaults to true"
                        },
                        "extensions": {
                            "description": "VSCode extensions to be installed in workspace in code-server",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "description": "Array of unique extension id's",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "Name (unique id) of VSCode extension to be loaded at VSCode startup. E.g.: hashicorp.terraform"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "id"
                                ]
                            }
                        },
                        "install_vsix": {
                            "type": "boolean",
                            "description": "True enables the installation of all in /workspace found extensions. Hint: You can download any .vsix Template via curl or wget and save it to /workspace. Then the extension gets processed and installed. Defaults to false"
                        },
                        "settings": {
                            "type": "string",
                            "description": "JSON settings for Code-Server"
                        }
                    },
                    "additionalProperties": false
                },
                "jobs": {
                    "description": "array of jobs to be executed at init phase of workspace",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "description": "",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of job to be executed within init phase of the workspace"
                            },
                            "cmd": {
                                "type": "string",
                                "description": "Actual job to be executed within init phase of the workspace"
                            },
                            "description": {
                                "type": "string",
                                "description": "Description of job to be executed within init phase of the workspace"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "name",
                            "cmd"
                        ]
                    }
                },
                "apps": {
                    "type": "array",
                    "description": "Use this resource to define shortcuts to access applications in a workspace.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "display_name": {
                                "type": "string",
                                "description": "Displayname (human readable) of the application"
                            },
                            "slug": {
                                "type": "string",
                                "pattern": "^[a-z0-9](-?[a-z0-9])*$",
                                "description": "(String) A hostname-friendly name for the app. This is used in URLs to access the app. May contain lowercase alphanumerics and hyphens. Cannot start/end with a hyphen or contain two consecutive hyphens. Pattern ^[a-z0-9](-?[a-z0-9])*$"
                            },
                            "url": {
                                "type": "string",
                                "description": "(String) A URL to be proxied to from inside the workspace. Either \"command\" or \"url\" may be specified, but not both."
                            },
                            "icon": {
                                "type": "string",
                                "description": "Icon URL. Can not be a private GH repository URL"
                            },
                            "subdomain": {
                                "type": "boolean",
                                "description": "(Boolean) Determines whether the app will be accessed via it's own subdomain or whether it will be accessed via a path on Coder. If wildcards have not been setup by the administrator then apps with \"subdomain\" set to true will not be accessible. Defaults to false."
                            },
                            "share": {
                                "enum": ["owner", "authenticated", "public"],
                                "description": "Determines the \"level\" which the application is shared at. Valid levels are \"owner\" (default), \"authenticated\" and \"public\". Level \"owner\" disables sharing on the app, so only the workspace owner can access it. Level \"authenticated\" shares the app with all authenticated users. Level \"public\" shares it with any user, including unauthenticated users."
                            },
                            "healthcheck": {
                                "type": "object",
                                "description": "(Block Set, Max: 1) HTTP health checking to determine the application readiness.",
                                "properties": {
                                    "url": {
                                        "type": "string",
                                        "description": "(String) HTTP address used determine the application readiness. A successful health check is a HTTP response code less than 500 returned before healthcheck.interval seconds."
                                    },
                                    "interval": {
                                        "type": "integer",
                                        "description": "(Number) Duration in seconds to wait between healthcheck requests. If unsure set to 3"
                                    },
                                    "threshold": {
                                        "type": "integer",
                                        "description": "(Number) Number of consecutive heathcheck failures before returning an unhealthy status. If unsure set to 10"
                                    }
                                },
                                "required": [
                                    "url",
                                    "interval",
                                    "threshold"
                                ]
                            }
                        },
                        "required": [
                            "display_name",
                            "slug",
                            "icon",
                            "url"
                        ]
                    }
                }
            },
            "additionalProperties": false
        } 
    },
    "additionalProperties": false,
    "required": [
        "coder"
    ]  
}
